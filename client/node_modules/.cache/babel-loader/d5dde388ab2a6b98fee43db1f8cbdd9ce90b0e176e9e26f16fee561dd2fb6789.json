{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didi_\\\\Desktop\\\\proiectlicenta\\\\client\\\\src\\\\comp\\\\User\\\\Mail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { isEmail } from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mail() {\n  _s();\n  const [inputEmail, setInputEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const handleInputEmailChange = event => {\n    const email = event.target.value;\n    setInputEmail(email);\n    if (isEmail(email)) {\n      setEmailError('');\n    } else {\n      setEmailError(\"Invalid email address.\");\n    }\n  };\n  const validateEmailForm = () => {\n    if (!isEmail(inputEmail)) {\n      setEmailError(\"Invalid email address.\");\n      return false;\n    }\n    return true;\n  };\n  const handleEmailSubmit = async event => {\n    event.preventDefault();\n    if (validateEmailForm()) {\n      try {\n        const response = await fetch('/reset-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: inputEmail\n          })\n        });\n        if (response.ok) {} else {}\n      } catch (error) {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-singup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEmailSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: inputEmail,\n        onChange: handleInputEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Mail, \"S+LqMZHAXYVdQ1JbVFdmWE96ko0=\");\n_c = Mail;\nexport default Mail;\nvar _c;\n$RefreshReg$(_c, \"Mail\");","map":{"version":3,"names":["React","useState","isEmail","jsxDEV","_jsxDEV","Mail","_s","inputEmail","setInputEmail","emailError","setEmailError","handleInputEmailChange","event","email","target","value","validateEmailForm","handleEmailSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/didi_/Desktop/proiectlicenta/client/src/comp/User/Mail.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { isEmail } from \"validator\";\r\n\r\nfunction Mail() {\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n\r\n    const handleInputEmailChange = (event) => {\r\n        const email = event.target.value;\r\n        setInputEmail(email);\r\n    \r\n        if (isEmail(email)) {\r\n          setEmailError('');\r\n        } else {\r\n          setEmailError(\"Invalid email address.\");\r\n        }\r\n      };\r\n\r\n    const validateEmailForm = () => {\r\n        if (!isEmail(inputEmail)) {\r\n          setEmailError(\"Invalid email address.\");\r\n          return false;\r\n        }    \r\n        return true;\r\n    };\r\n\r\n    const handleEmailSubmit = async (event) => {\r\n        event.preventDefault();\r\n      \r\n        if (validateEmailForm()) {\r\n          try {\r\n            const response = await fetch('/reset-password', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({ email: inputEmail }),\r\n            });\r\n      \r\n            if (response.ok) {\r\n            } else {\r\n            }\r\n          } catch (error) {\r\n          }\r\n        }\r\n      };\r\n\r\n      return (\r\n        <div className=\"login-singup\">\r\n          <form onSubmit={handleEmailSubmit}>\r\n            <h1>Reset Password</h1>\r\n            {emailError && <span className=\"error\">{emailError}</span>}\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={inputEmail}\r\n              onChange={handleInputEmailChange}\r\n            />\r\n            <button type=\"submit\">Send Reset Link</button>\r\n          </form>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default Mail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACtC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAChCP,aAAa,CAACK,KAAK,CAAC;IAEpB,IAAIX,OAAO,CAACW,KAAK,CAAC,EAAE;MAClBH,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACLA,aAAa,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAEH,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACd,OAAO,CAACK,UAAU,CAAC,EAAE;MACxBG,aAAa,CAAC,wBAAwB,CAAC;MACvC,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACf,CAAC;EAED,MAAMO,iBAAiB,GAAG,MAAOL,KAAK,IAAK;IACvCA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,IAAIF,iBAAiB,CAAC,CAAC,EAAE;MACvB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;UAC9CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEZ,KAAK,EAAEN;UAAW,CAAC;QAC5C,CAAC,CAAC;QAEF,IAAIY,QAAQ,CAACO,EAAE,EAAE,CACjB,CAAC,MAAM,CACP;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE,CAChB;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BzB,OAAA;MAAM0B,QAAQ,EAAEb,iBAAkB;MAAAY,QAAA,gBAChCzB,OAAA;QAAAyB,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBzB,UAAU,iBAAIL,OAAA;QAAMwB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEpB;MAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1D9B,OAAA;QACE+B,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBtB,KAAK,EAAER,UAAW;QAClB+B,QAAQ,EAAE3B;MAAuB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACF9B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAC5B,EAAA,CA5DQD,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AA8Db,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}