{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAURA\\\\Desktop\\\\proiectlicenta\\\\client\\\\src\\\\comp\\\\User\\\\Password.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Password() {\n  _s();\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [inputConfirmPassword, setInputConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get(\"token\");\n    setToken(token);\n  }, []);\n  const handleInputPasswordChange = event => {\n    const password = event.target.value;\n    setInputPassword(password);\n  };\n  const handleInputConfirmPasswordChange = event => {\n    const confirmPassword = event.target.value;\n    setInputConfirmPassword(confirmPassword);\n  };\n  const validateResetForm = () => {\n    let isValid = true;\n    if (inputPassword.length < 6) {\n      setPasswordError(\"Password must be at least 6 characters long.\");\n      isValid = false;\n    } else if (!/\\d/.test(inputPassword)) {\n      setPasswordError(\"Password must contain at least one number.\");\n      isValid = false;\n    } else if (!/[A-Z]/.test(inputPassword)) {\n      setPasswordError(\"Password must contain at least one uppercase letter.\");\n      isValid = false;\n    } else {\n      setPasswordError(\"\");\n    }\n    if (inputPassword !== inputConfirmPassword) {\n      setConfirmPasswordError(\"Passwords do not match.\");\n      isValid = false;\n    } else {\n      setConfirmPasswordError(\"\");\n    }\n    return isValid;\n  };\n  const handleResetSubmit = async event => {\n    event.preventDefault();\n    if (validateResetForm()) {\n      try {\n        const response = await fetch(\"/confirm-reset-password\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            password: inputPassword,\n            token: token\n          })\n        });\n        if (response.ok) {\n          setInputPassword(\"\");\n          setInputConfirmPassword(\"\");\n        } else {}\n      } catch (error) {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"New Password\",\n        value: inputPassword,\n        onChange: handleInputPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), confirmPasswordError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm New Password\",\n        value: inputConfirmPassword,\n        onChange: handleInputConfirmPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Password, \"XSwt10FBA1ZNhT6SjwzGCu7q490=\");\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Password","_s","inputPassword","setInputPassword","inputConfirmPassword","setInputConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","token","setToken","urlParams","URLSearchParams","window","location","search","get","handleInputPasswordChange","event","password","target","value","handleInputConfirmPasswordChange","confirmPassword","validateResetForm","isValid","length","test","handleResetSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/LAURA/Desktop/proiectlicenta/client/src/comp/User/Password.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Password() {\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n  const [inputConfirmPassword, setInputConfirmPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const token = urlParams.get(\"token\");\r\n    setToken(token);\r\n  }, []);\r\n\r\n  const handleInputPasswordChange = (event) => {\r\n    const password = event.target.value;\r\n    setInputPassword(password);\r\n  };\r\n\r\n  const handleInputConfirmPasswordChange = (event) => {\r\n    const confirmPassword = event.target.value;\r\n    setInputConfirmPassword(confirmPassword);\r\n  };\r\n\r\n  const validateResetForm = () => {\r\n    let isValid = true;\r\n\r\n    if (inputPassword.length < 6) {\r\n      setPasswordError(\"Password must be at least 6 characters long.\");\r\n      isValid = false;\r\n    } else if (!/\\d/.test(inputPassword)) {\r\n      setPasswordError(\"Password must contain at least one number.\");\r\n      isValid = false;\r\n    } else if (!/[A-Z]/.test(inputPassword)) {\r\n      setPasswordError(\"Password must contain at least one uppercase letter.\");\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(\"\");\r\n    }\r\n\r\n    if (inputPassword !== inputConfirmPassword) {\r\n      setConfirmPasswordError(\"Passwords do not match.\");\r\n      isValid = false;\r\n    } else {\r\n      setConfirmPasswordError(\"\");\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleResetSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (validateResetForm()) {\r\n      try {\r\n        const response = await fetch(\"/confirm-reset-password\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            password: inputPassword,\r\n            token: token,\r\n          }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          setInputPassword(\"\");\r\n          setInputConfirmPassword(\"\");\r\n        } else {\r\n        }\r\n      } catch (error) {\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-signup\">\r\n      <form onSubmit={handleResetSubmit}>\r\n        <h1>Reset Password</h1>\r\n        {passwordError && <span className=\"error\">{passwordError}</span>}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={inputPassword}\r\n          onChange={handleInputPasswordChange}\r\n        />\r\n        {confirmPasswordError && <span className=\"error\">{confirmPasswordError}</span>}\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm New Password\"\r\n          value={inputConfirmPassword}\r\n          onChange={handleInputConfirmPasswordChange}\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Password;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}